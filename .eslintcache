[{"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\index.js":"1","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\App.js":"2","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\reportWebVitals.js":"3","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\UrlValidator\\UrlValidator.jsx":"4","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\FilterEvenOdd\\FilterEvenOdd.jsx":"5","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\FilterEvenOdd\\utility.js":"6","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\ImageLoader\\ImageLoader.jsx":"7","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\AreaCalculator\\AreaCalculator.jsx":"8","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\AreaCalculator\\utility.js":"9","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\index.js":"10","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\reportWebVitals.js":"11","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\App.js":"12","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\FilterEvenOdd\\FilterEvenOdd.jsx":"13","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\UrlValidator\\UrlValidator.jsx":"14","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\AreaCalculator\\AreaCalculator.jsx":"15","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\ImageLoader\\ImageLoader.jsx":"16","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\AreaCalculator\\utility.js":"17","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\FilterEvenOdd\\utility.js":"18","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\UrlValidator\\utility.js":"19","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Search\\Search.jsx":"20","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\ColorChanger\\ColorChanger.jsx":"21","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Dropdown\\Dropdown.jsx":"22","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Stopwatch\\Stopwatch.jsx":"23","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\InputContainer\\InputContainer.jsx":"24","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Input\\Input.jsx":"25","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Component2\\Component2.jsx":"26","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Component1\\Component1.jsx":"27","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Header\\Header.jsx":"28","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\TaskList\\TaskList.jsx":"29","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Route\\Route.jsx":"30","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Modal\\Modal.jsx":"31","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Link\\Link.jsx":"32","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Blog.jsx":"33","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Header\\Header.jsx":"34","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Preview\\Preview.jsx":"35","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Editor\\Editor.jsx":"36","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Articles\\Articles.jsx":"37","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Articles\\Article\\Article.jsx":"38","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Navigation.jsx":"39"},{"size":500,"mtime":499162500000,"results":"40","hashOfConfig":"41"},{"size":538,"mtime":1617300922601,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":3373,"mtime":1617165048491,"results":"44","hashOfConfig":"41"},{"size":2259,"mtime":1617178965899,"results":"45","hashOfConfig":"41"},{"size":424,"mtime":1617168093019,"results":"46","hashOfConfig":"41"},{"size":3203,"mtime":1617295055166,"results":"47","hashOfConfig":"41"},{"size":1165,"mtime":1617134520275,"results":"48","hashOfConfig":"41"},{"size":148,"mtime":1617134481395,"results":"49","hashOfConfig":"41"},{"size":517,"mtime":1618302316220,"results":"50","hashOfConfig":"51"},{"size":375,"mtime":1618302316230,"results":"52","hashOfConfig":"51"},{"size":1271,"mtime":1619064069643,"results":"53","hashOfConfig":"51"},{"size":2268,"mtime":1618302316183,"results":"54","hashOfConfig":"51"},{"size":5659,"mtime":1618374542309,"results":"55","hashOfConfig":"51"},{"size":1230,"mtime":1618313085553,"results":"56","hashOfConfig":"51"},{"size":3203,"mtime":1618302316191,"results":"57","hashOfConfig":"51"},{"size":148,"mtime":1618302316179,"results":"58","hashOfConfig":"51"},{"size":424,"mtime":1618302316187,"results":"59","hashOfConfig":"51"},{"size":1825,"mtime":1618374298649,"results":"60","hashOfConfig":"51"},{"size":2081,"mtime":1618403790845,"results":"61","hashOfConfig":"51"},{"size":1681,"mtime":1618403844815,"results":"62","hashOfConfig":"51"},{"size":1677,"mtime":1618282162141,"results":"63","hashOfConfig":"51"},{"size":2096,"mtime":1618375580091,"results":"64","hashOfConfig":"51"},{"size":1950,"mtime":1618404809316,"results":"65","hashOfConfig":"51"},{"size":6103,"mtime":1618228901255,"results":"66","hashOfConfig":"51"},{"size":374,"mtime":1618827865609,"results":"67","hashOfConfig":"51"},{"size":375,"mtime":1618827858303,"results":"68","hashOfConfig":"51"},{"size":378,"mtime":1618828976814,"results":"69","hashOfConfig":"51"},{"size":5014,"mtime":1618578243109,"results":"70","hashOfConfig":"51"},{"size":572,"mtime":1618807209090,"results":"71","hashOfConfig":"51"},{"size":1024,"mtime":1618577262146,"results":"72","hashOfConfig":"51"},{"size":685,"mtime":1618828231065,"results":"73","hashOfConfig":"51"},{"size":2189,"mtime":1619064443495,"results":"74","hashOfConfig":"51"},{"size":774,"mtime":1619066787643,"results":"75","hashOfConfig":"51"},{"size":1432,"mtime":1619145704092,"results":"76","hashOfConfig":"51"},{"size":1975,"mtime":1619147474230,"results":"77","hashOfConfig":"51"},{"size":1645,"mtime":1619154093685,"results":"78","hashOfConfig":"51"},{"size":1180,"mtime":1619152129389,"results":"79","hashOfConfig":"51"},{"size":729,"mtime":1618974801423,"results":"80","hashOfConfig":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"h8hha9",{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"2w8unm",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"105"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\index.js",[],["176","177"],"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\App.js",["178","179","180","181"],"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\reportWebVitals.js",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\UrlValidator\\UrlValidator.jsx",["182"],"import React, { useState } from 'react';\r\nimport classes from './UrlValidator.module.css';\r\n\r\nconst UrlValidator = ( props ) => {\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [method, setMethod] = useState('GET');\r\n\r\n    const [message, setMessage] = useState({\r\n        status : 'none',\r\n        message : ''\r\n    });\r\n\r\n    const checkValidity = (url) => {\r\n\r\n        fetch(url)\r\n        .then(res => {\r\n            if(res.status == 200) {\r\n                setMessage({status : 'success', message: `Successful ${url} `})\r\n            } else {\r\n                setMessage({status : 'fail', message: 'Something went wrong with Http Request'})\r\n            }\r\n            \r\n        }).catch(err => {\r\n            console.log('Errors');\r\n            setMessage({status : 'fail', message: 'Something went wrong with Http Request'})\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let domain = e.target[0].value;\r\n        let params = e.target[1].value.split(',');\r\n\r\n        let finalURL = `${domain}/${params}`;\r\n        console.log(finalURL);\r\n        checkValidity(finalURL)\r\n\r\n    }\r\n\r\n    const onChangeDropDown = (e) => {\r\n        let methodName = e.target.value;\r\n\r\n        if(['PUT', 'POST'].includes(methodName)) {\r\n            setShow(true);\r\n        } else {\r\n            setShow(false);\r\n        }\r\n        setMethod(methodName);\r\n    }\r\n\r\n\r\n\r\n    const bodyElement = (\r\n        show && \r\n        <>\r\n            <label className={classes.Label} htmlFor=\"label\">Body</label>\r\n            <textarea required className={classes.TextArea} rows=\"4\" cols=\"10\" placeholder=\"Fill this only for the PUT and the POST methods\" ></textarea>\r\n        </>\r\n    );\r\n\r\n    const AlertElement = (\r\n                message.status !== 'none' &&\r\n                <div className={`${classes.Message} ${message.status === 'success' ? classes.Green : classes.Red}`}>\r\n                    {message.message}\r\n                </div>\r\n    )\r\n\r\n\r\n    return ( \r\n        <>\r\n            <h1>Url Validator</h1>\r\n            \r\n            <form className={classes.Container} onSubmit={onSubmitHandler}>\r\n                \r\n                {AlertElement}\r\n\r\n                <label className={classes.Label} htmlFor=\"label\">Domain</label>\r\n                <input className={ classes.Input } type=\"text\" placeholder=\"Enter the Domain URL\"/>\r\n                <label className={classes.Label} htmlFor=\"label\">Path</label>\r\n                <input className={ classes.Input } type=\"text\" placeholder=\"Enter the path variables separated by comma\"/>\r\n\r\n\r\n                <label className={classes.Label} htmlFor=\"label\">Method</label>\r\n                <select className={classes.Dropdown} onChange={onChangeDropDown} defaultValue={method} >\r\n                    <option selected className={classes.Option} defaultValue=\"GET\">GET</option>\r\n                    <option className={classes.Option} defaultValue=\"POST\">POST</option>\r\n                    <option className={classes.Option} defaultValue=\"PUT\">PUT</option>\r\n                    <option className={classes.Option} defaultValue=\"DELETE\">DELETE</option>\r\n                </select>\r\n\r\n                {bodyElement}\r\n                <button type=\"submit\" className={classes.Button}>Validate</button>\r\n            </form>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default UrlValidator;","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\FilterEvenOdd\\FilterEvenOdd.jsx",["183"],"import React, { useState } from 'react';\r\nimport classes from './FilterEvenOdd.module.css';\r\nimport { filterEven, filterOdd, generateRandomList } from './utility';\r\n\r\nconst FilterEvenOdd = ( props ) => {\r\n\r\n    const [arrayList, setArrayList] = useState([]);\r\n\r\n    const [arraysize, setArraySize] = useState('');\r\n\r\n    const [filteredArray, setFilteredArray] = useState([]);\r\n\r\n    const createArrayList = () => {\r\n        if(arraysize === '') {\r\n            setArrayList(([1,2,3,4,5,6,7]));\r\n        } else \r\n            setArrayList(arraysize.split(' '));\r\n    }\r\n\r\n    const onFilterArray = (mode) => {\r\n        if(mode === 'even') {\r\n            console.log((arrayList));\r\n            setFilteredArray(filterEven(arrayList));\r\n        } else {\r\n            setFilteredArray(filterOdd(arrayList));\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <div className={classes.Container}>\r\n\r\n                <h1>Number Filter</h1>\r\n                <div className={classes.ButtonContainer}>\r\n                    <input data-testid=\"numberOfInput\" className={classes.Input} type=\"text\" onChange={(e) => setArraySize(e.target.value)} placeholder='Enter the number of inputs' />\r\n                    <button data-testid=\"generateNumber\" className={classes.Button} onClick={createArrayList}>Generate Random Numbers</button>\r\n                </div>\r\n\r\n                <div className={classes.Numcontainer}>\r\n                    {arrayList.map((item, index) => <span key={index} data-testid=\"originalList\" className={classes.Number}>{item}</span>)}\r\n                </div>\r\n                \r\n                <div className={classes.NumberContainer}>\r\n                    <button data-testid=\"oddbutton\" className={classes.Button} onClick={() => onFilterArray('odd')}>ODD</button>\r\n                    <button data-testid=\"evenbutton\" className={classes.Button} onClick={() => onFilterArray('even')}>EVEN</button>\r\n                </div>\r\n\r\n                <h1>Filtered Array</h1>\r\n                <div className={classes.Output}>\r\n                    {filteredArray.map(item => <span data-testid=\"filteredList\" className={classes.Number}>{item}</span>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default FilterEvenOdd;","C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\FilterEvenOdd\\utility.js",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\ImageLoader\\ImageLoader.jsx",["184","185","186"],"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\AreaCalculator\\AreaCalculator.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Company\\Virtusa\\Projects\\Virtusa React Projects\\react-virtusa-3\\src\\components\\AreaCalculator\\utility.js",["187"],"\r\nexport const getAreaOfCircle = (radius) => {\r\n    let convertedNumber = Number(radius);\r\n    return (Math.PI * radius * radius).toFixed(2);\r\n}\r\n\r\n","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\index.js",[],["188","189"],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\App.js",["190","191","192","193","194","195","196","197","198","199"],"import './App.css';\r\nimport UrlValidator from './components/UrlValidator/UrlValidator';\r\nimport FilterEvenOdd from './components/FilterEvenOdd/FilterEvenOdd';\r\nimport ImageLoader from './components/ImageLoader/ImageLoader';\r\nimport AreaCalculator from './components/AreaCalculator/AreaCalculator';\r\nimport Search from './components/Search/Search';\r\nimport ColorChanger from './components/ColorChanger/ColorChanger';\r\nimport Stopwatch from './components/Stopwatch/Stopwatch';\r\nimport InputContainer from './components/InputContainer/InputContainer'\r\nimport TaskList from './components/TaskList/TaskList';\r\nimport Blog from './components/Blog/Blog';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Navigation from './components/Navigation/Navigation';\r\nfunction App() {\r\n  return (\r\n    <>\r\n      {/* <div className=\"App\">\r\n        <InputContainer />\r\n        <Stopwatch />\r\n        <Search />\r\n        <ColorChanger />\r\n        <AreaCalculator />\r\n        <FilterEvenOdd />\r\n        <ImageLoader />\r\n        <UrlValidator />\r\n      </div> */}\r\n\r\n      {/* <div className=\"App\">\r\n        <TaskList />\r\n        <Navigation />\r\n      </div> */}\r\n\r\n      <BrowserRouter>\r\n        <Blog />\r\n      </BrowserRouter>\r\n    \r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\FilterEvenOdd\\FilterEvenOdd.jsx",["200"],"import React, { useState } from 'react';\r\nimport classes from './FilterEvenOdd.module.css';\r\nimport { filterEven, filterOdd, generateRandomList } from './utility';\r\n\r\nconst FilterEvenOdd = ( props ) => {\r\n\r\n    const [arrayList, setArrayList] = useState([]);\r\n\r\n    const [arraysize, setArraySize] = useState('');\r\n\r\n    const [filteredArray, setFilteredArray] = useState([]);\r\n\r\n    const createArrayList = () => {\r\n        if(arraysize === '') {\r\n            setArrayList(([1,2,3,4,5,6,7]));\r\n        } else \r\n            setArrayList(arraysize.split(' '));\r\n    }\r\n\r\n    const onFilterArray = (mode) => {\r\n        if(mode === 'even') {\r\n            console.log((arrayList));\r\n            setFilteredArray(filterEven(arrayList));\r\n        } else {\r\n            setFilteredArray(filterOdd(arrayList));\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <div className={classes.Container}>\r\n\r\n                <h1>Number Filter</h1>\r\n                <div className={classes.ButtonContainer}>\r\n                    <input data-testid=\"numberOfInput\" className={classes.Input} type=\"text\" onChange={(e) => setArraySize(e.target.value)} placeholder='Enter the inputs separated by space' />\r\n                    <button data-testid=\"generateNumber\" className={classes.Button} onClick={createArrayList}>Generate Random Numbers</button>\r\n                </div>\r\n\r\n                <div className={classes.Numcontainer}>\r\n                    {arrayList.map((item, index) => <span key={index} data-testid=\"originalList\" className={classes.Number}>{item}</span>)}\r\n                </div>\r\n                \r\n                <div className={classes.NumberContainer}>\r\n                    <button data-testid=\"oddbutton\" className={classes.Button} onClick={() => onFilterArray('odd')}>ODD</button>\r\n                    <button data-testid=\"evenbutton\" className={classes.Button} onClick={() => onFilterArray('even')}>EVEN</button>\r\n                </div>\r\n\r\n                <h1>Filtered Array</h1>\r\n                <div className={classes.Output}>\r\n                    {filteredArray.map(item => <span data-testid=\"filteredList\" className={classes.Number}>{item}</span>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default FilterEvenOdd;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\UrlValidator\\UrlValidator.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\AreaCalculator\\AreaCalculator.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\ImageLoader\\ImageLoader.jsx",["201","202","203"],"import React, { useState } from 'react';\r\nimport classes from './ImageLoader.module.css';\r\n\r\nconst ImageLoader = ( props ) => {\r\n\r\n    const [imageList, setImageList] = useState([]);\r\n\r\n    // const onSubmitHandler = (e) => {\r\n    //     e.preventDefault();\r\n\r\n        // fetch(e.target[0].value)\r\n        // .then(res => res.blob())\r\n        // .then(blob => {\r\n        //     let objectURL = URL.createObjectURL(blob);\r\n        //     setImageList([\r\n        //         ...imageList,\r\n        //         <img className={classes.Image} src={objectURL} />\r\n        //     ])\r\n\r\n        // })\r\n    // }\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault();        \r\n\r\n        await fetch(e.target[0].value)\r\n        .then(res => res.blob())\r\n        .then(blob => {\r\n                let objectURL = URL.createObjectURL(blob);\r\n                setImageList(prevState => {\r\n                    return [\r\n                        ...prevState,\r\n                        <img className={classes.Image} id=\"image1\" src={objectURL} />\r\n                    ]\r\n                })\r\n        }).catch(err => console.log(err));\r\n\r\n\r\n        await fetch(e.target[1].value)\r\n        .then(res => res.blob())\r\n        .then(blob => {\r\n                let objectURL = URL.createObjectURL(blob);\r\n                setImageList(prevState => {\r\n                    return [\r\n                        ...prevState,\r\n                        <img className={classes.Image} id=\"image2\" src={objectURL} />\r\n                    ]\r\n                })\r\n        \r\n        }).catch(err => console.log(err));\r\n\r\n        await fetch(e.target[2].value)\r\n        .then(res => res.blob())\r\n        .then(blob => {\r\n                let objectURL = URL.createObjectURL(blob);\r\n                setImageList(prevState => {\r\n                    return [\r\n                        ...prevState,\r\n                        <img className={classes.Image} id=\"image3\" src={objectURL} />\r\n                    ]\r\n                })\r\n        }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    return ( \r\n        <>  \r\n            <h1>Image Loader</h1>\r\n            <form className={classes.Container} method=\"post\" onSubmit={onSubmitHandler}>\r\n                <label className={classes.Label} htmlFor=\"label\">Image URL 1</label>\r\n                <input id=\"imageinput1\" required name=\"image\" className={ classes.Input } type=\"text\" placeholder=\"Enter the Image URL 1\"/>\r\n                <label className={classes.Label} htmlFor=\"label\">Image URL 2</label>\r\n                <input id=\"imageinput2\" required name=\"image\" className={ classes.Input } type=\"text\" placeholder=\"Enter the Image URL 2\"/>\r\n                <label className={classes.Label} htmlFor=\"label\">Image URL 3</label>\r\n                <input id=\"imageinput3\" required name=\"image\" className={ classes.Input } type=\"text\" placeholder=\"Enter the Image URL 3\"/>\r\n                <button type=\"submit\" id=\"submit\" className={classes.Button}>Create</button>\r\n            </form>\r\n\r\n            <h1>Image List</h1>\r\n\r\n            <div className={classes.OutputContainer}>\r\n                {imageList}\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default ImageLoader;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\AreaCalculator\\utility.js",["204"],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\FilterEvenOdd\\utility.js",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\UrlValidator\\utility.js",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Search\\Search.jsx",["205"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Search = props => {\r\n\r\n\r\n    const [term, setTerm] = useState('programming');\r\n    const [searchResults, setSearchResults ] = useState([]);\r\n\r\n    const updateSearchResults = (data) => {\r\n        const [searchResults, searchLinks ] = [data[1], data[3]];\r\n\r\n        let newSearchResults = [];\r\n\r\n       for(let i = 0; i < searchResults.length; i++) {\r\n           newSearchResults.push(<a target=\"_blank\" data-testid=\"suggestion\" key={Math.random()* 100 * Date.now()} className=\"listItem\" href={searchLinks[i]}>{searchResults[i]}</a>)\r\n       }\r\n\r\n       setSearchResults(newSearchResults);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const initiateSearch = async () => {\r\n\r\n            if(term === '') {\r\n                await setTimeout(() => {\r\n                    setSearchResults([])\r\n                }, 200);\r\n                return;\r\n            }\r\n\r\n            const val = await axios.get('https://en.wikipedia.org/w/api.php', {\r\n                params : {\r\n                    action : 'opensearch',\r\n                    origin : '*',\r\n                    search : term\r\n                }\r\n            });\r\n            await console.log(val.data);\r\n            updateSearchResults(val.data);\r\n        }\r\n\r\n        const timeOutId = setTimeout(() => {\r\n            initiateSearch();\r\n                \r\n        } , 500);\r\n\r\n        return () => {\r\n            clearTimeout(timeOutId);\r\n        }\r\n\r\n    }, [term]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1><center>Wiki Search</center></h1>\r\n            <div className=\"SearchContainer\">\r\n                <div className=\"ui input center\">\r\n                    <input data-testid=\"searchterm\" type=\"text\" onChange={(event) => setTerm(event.target.value)} value={term} placeholder=\"Search...\" className=\"\" />\r\n                </div>\r\n                    <div className=\"ui list\">\r\n                    {searchResults}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\ColorChanger\\ColorChanger.jsx",["206"],"import React, { useEffect, useState } from 'react';\r\nimport DropDown from '../Dropdown/Dropdown';\r\n\r\nconst ColorChanger = props => {\r\n\r\n    const optionsList = [\r\n        {\r\n            label : 'Lime',\r\n            value : 'lime'\r\n        },\r\n        {\r\n            label : 'Lavender',\r\n            value : 'lavender'\r\n        },\r\n        {\r\n            label : 'Crimson',\r\n            value : 'crimson'\r\n        },\r\n        {\r\n            label : 'Darkblue',\r\n            value : 'darkblue'\r\n        },\r\n        {\r\n            label : 'Teal',\r\n            value : 'teal'\r\n        },\r\n        {\r\n            label : 'Rebecca Purple',\r\n            value : 'rebeccapurple'\r\n        },\r\n        {\r\n            label : 'Ghost White',\r\n            value : 'ghostwhite'\r\n        },\r\n        {\r\n            label : 'Aqua Marine',\r\n            value : 'aquamarine'\r\n        },\r\n        {\r\n            label : 'Alice Blue',\r\n            value : 'aliceblue'\r\n        },\r\n    ];\r\n\r\n    const [ selectedOption, setSelectedOption] = useState(optionsList[0]);\r\n\r\n    const divStyle = {\r\n        backgroundColor : selectedOption.value,\r\n        width: '70%',\r\n        margin: '100px auto',\r\n        borderRadius : '10px',\r\n        height : '250px',\r\n        border : '4px solid black',\r\n        transition : \"all 0.3s\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1><center>Color changer</center></h1>\r\n            <DropDown selected={selectedOption} listedOptions={optionsList} onSelectOption={setSelectedOption} />\r\n            <div className=\"ui container \">\r\n                <div id=\"box\" style={divStyle}></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColorChanger;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Dropdown\\Dropdown.jsx",["207"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport classes from \"./Dropdown.module.css\";\r\nconst Dropdown = props => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const ref= useRef();\r\n\r\n    const displayOptions = () => {\r\n        return (\r\n            props.listedOptions.map(option => {\r\n                if(option.value == props.selected.value)\r\n                    return null;\r\n                return <button key={option.value} data-testid=\"option\"  onClick={() => props.onSelectOption(option)} className={classes.DdListItem} value={option.value}>{option.label}</button>\r\n            })\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n        const onbodyclick = (event) => {\r\n            if(ref.current && ref.current.contains(event.target))\r\n                return;\r\n            else\r\n                setOpen(false);\r\n                \r\n        };\r\n        document.body.addEventListener('click', onbodyclick )\r\n\r\n        return () => {\r\n            document.removeEventListener('click' , onbodyclick);\r\n        }\r\n\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div id=\"dropdownWrapper\" ref={ref} className={classes.DdWrapper}>\r\n            <div id=\"dropdownContainer\" onClick={() => setOpen(!open)} className={classes.DdHeader}>\r\n                <div className={classes.DdHeaderTitle}>\r\n                    {props.selected.value}\r\n                </div>\r\n                <i className={`caret ${open ? 'down' : 'up'} icon`}></i>\r\n            </div>\r\n            <div id=\"block\" className={[classes.DdList, !open && classes.Hidden].join(' ')}>\r\n                {displayOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Stopwatch\\Stopwatch.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\InputContainer\\InputContainer.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Input\\Input.jsx",["208","209","210","211","212","213"],"import React, { Component } from 'react';\r\nimport classes from \"./Input.module.css\"\r\n\r\nclass Input extends Component {\r\n    state = { \r\n        value : '',\r\n        error : false,\r\n        focus : false,\r\n        message : '',\r\n        messageColor : 'none'\r\n     }\r\n\r\n     onFocusHandler = () => {\r\n         if(this.state.value === '') {\r\n            this.setState({focus : true, error : true})\r\n            this.checkValidity()\r\n         } else {\r\n             this.setState({focus : true})\r\n         }\r\n         \r\n     }\r\n\r\n    validateEmail = (value = '') => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const testValue =  re.test(String(value).toLowerCase());\r\n\r\n        if(!testValue) {\r\n            this.setState({\r\n                error : true,\r\n                value,\r\n                message : 'Invalid Email',\r\n                messageColor : 'TEXT_RED'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                 error : false,\r\n                 value,\r\n                 message : '',\r\n                 messageColor : 'TEXT_GREEN'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    CheckPasswordStrength = (password = '') => {\r\n      \r\n          //if textBox is empty\r\n          if(password.length==0){\r\n              this.setState({\r\n                  error : true,\r\n                  value : password,\r\n                  message : 'Please Fill the password',\r\n                  messageColor : 'TEXT_RED'\r\n              })\r\n              return;\r\n          }\r\n      \r\n          //Regular Expressions\r\n          var regex = new Array();\r\n          regex.push(\"[A-Z]\"); //For Uppercase Alphabet\r\n          regex.push(\"[a-z]\"); //For Lowercase Alphabet\r\n          regex.push(\"[0-9]\"); //For Numeric Digits\r\n          regex.push(\"[$@$!%*#?&]\"); //For Special Characters\r\n      \r\n          var passed = 0;\r\n      \r\n          //Validation for each Regular Expression\r\n          for (var i = 0; i < regex.length; i++) {\r\n              if((new RegExp (regex[i])).test(password)){\r\n                  passed++;\r\n              }\r\n          }\r\n      \r\n          //Validation for Length of Password\r\n          if(passed > 2 && password.length > 8){\r\n              passed++;\r\n          }\r\n      \r\n          //Display of Status\r\n          let color = \"\";\r\n          let passwordStrength = \"\";\r\n          let errorPassword = false\r\n\r\n          switch(passed){\r\n              case 0:\r\n                  break;\r\n              case 1:\r\n                  passwordStrength = \"Password is Weak\";\r\n                  color = \"TEXT_RED\";\r\n                  errorPassword = true;\r\n                  break;\r\n              case 2:\r\n                  passwordStrength = \"Password is Good\";\r\n                  color = \"DARK_ORANGE\";\r\n                  break;\r\n              case 3:\r\n                      break;\r\n              case 4:\r\n                  passwordStrength = \"Password is Strong\";\r\n                  color = \"TEXT_GREEN\";\r\n                  break;\r\n              case 5:\r\n                  passwordStrength = \"Password is Very Strong\";\r\n                  color = \"TEXT_DARK_GREEN\";\r\n                  break;\r\n          }\r\n\r\n          this.setState({\r\n            error : errorPassword,\r\n            value : password,\r\n            messageColor : color,\r\n            message : passwordStrength\r\n          })\r\n      }\r\n\r\n      CheckText = (value) => {\r\n          if(value == '') {\r\n              this.setState({\r\n                  error : true,\r\n                  value,\r\n                  message : 'Please Fill the column',\r\n                  messageColor : 'TEXT_RED'\r\n              })\r\n          } else {\r\n            this.setState({\r\n                error : false,\r\n                value,\r\n                message : '',\r\n                messageColor : 'none'\r\n            })\r\n          }\r\n      }\r\n\r\n\r\n\r\n     checkValidity = (value = '') => {\r\n\r\n        switch(this.props.type) {\r\n            case 'email' : \r\n                this.validateEmail(value);\r\n                break;\r\n            case 'password' :\r\n                this.CheckPasswordStrength(value);\r\n                break;\r\n            case 'text' :\r\n                this.CheckText(value);\r\n\r\n        }\r\n     }\r\n\r\n     messageRenderer = () => {\r\n\r\n        let colorValue = [];\r\n\r\n        if(this.state.message != '') {\r\n            switch (this.state.messageColor) {\r\n                case 'RED':\r\n                    colorValue.push(classes.Red);\r\n                    break;\r\n                case 'TEXT_RED':\r\n                    colorValue.push(classes.TextRed);\r\n                    break;\r\n                case 'TEXT_GREEN':\r\n                    colorValue.push(classes.TextGreen);\r\n                    break;\r\n                case 'TEXT_DARK_GREEN':\r\n                    colorValue.push(classes.TextDarkGreen);\r\n                    break;\r\n                case 'DARK_ORANGE':\r\n                    colorValue.push(classes.TextDarkOrange);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            return <p data-testid='message' className={colorValue.toString()}>{this.state.message}</p>\r\n        }\r\n\r\n     }\r\n\r\n\r\n     onChangeHandler = (e) => {\r\n        this.checkValidity(e.target.value)\r\n     }\r\n    render() { \r\n\r\n        const classList = [classes.Input];\r\n\r\n        if(this.state.focus) {\r\n            this.state.error ? classList.push(classes.Red) : classList.push(classes.Green);\r\n        }\r\n\r\n        return ( \r\n            <>\r\n                <label htmlFor=\"input\" className={classes.Label}>{this.props.label}</label>\r\n                <input data-testid={this.props.datatestid} className={classList.join(' ')} type={this.props.type} onFocus={this.onFocusHandler} placeholder={this.props.placeholder} onchangeHandler value={this.props.value || this.state.value} onChange={this.props.change || this.onChangeHandler} />\r\n                {this.messageRenderer()}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Input;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Component2\\Component2.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Component1\\Component1.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Header\\Header.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\TaskList\\TaskList.jsx",["214","215","216","217","218"],"import React, { useState } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport classes from './TaskList.module.css';\r\n\r\nconst TaskList = ( props ) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [notStarted, setNotStarted] = useState([]);\r\n    const [inProgress, setInProgress] = useState([]);\r\n    const [completed, setCompleted] = useState([]);\r\n\r\n    let tempDragValue;\r\n\r\n    const addTask = (event) => {\r\n        event.preventDefault();\r\n        const taskValue = event.target[0].value;\r\n        if(taskValue)\r\n            setNotStarted(prevState => [...prevState, taskValue])\r\n        setOpen(false);\r\n    }\r\n\r\n    const onDragStartHandler = (e, taskName) => {\r\n        tempDragValue = {\r\n            taskName,\r\n            taskListId : e.target.getAttribute(['data-listnumber'])\r\n        };\r\n\r\n        // console.log(tempDragValue);\r\n    }\r\n\r\n    const onDragOverHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const onDropHandler = (e) => {\r\n        // console.log(e.target);\r\n        const dropContainerName = e.target.getAttribute('name');\r\n\r\n        const dropContainerID = dropContainerName === 'notstarted' ? '1' : dropContainerName === 'inprogress' ? '2' : '3';\r\n\r\n        if(dropContainerID == tempDragValue.taskListId)\r\n            return;\r\n\r\n        /*\r\n        console.group();\r\n            console.log(\"Drop done\");\r\n            console.log(`Con Name : ${dropContainerName} and Con ID : ${dropContainerID}`);\r\n        console.groupEnd();\r\n        */\r\n\r\n        removeFromList(tempDragValue);\r\n        AddToList(tempDragValue.taskName, dropContainerID);\r\n    }\r\n\r\n    const AddToList = (taskName, taskListId) => {\r\n\r\n        /*\r\n        console.group();\r\n            console.log(\"Called Add to list\");\r\n            console.log(`${taskName} and addcontainer ${taskListId}`);\r\n        console.groupEnd();\r\n        */\r\n        \r\n\r\n        switch (taskListId) {\r\n            case \"1\": {\r\n                setNotStarted(prevState => [...prevState, taskName]);\r\n                break;\r\n            }\r\n            case \"2\": {\r\n                setInProgress(prevState => [...prevState, taskName]);\r\n                break;\r\n            }\r\n            case \"3\": {\r\n                setCompleted(prevState => [...prevState, taskName]);\r\n                break;\r\n            }   \r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const removeFromList = ({taskName, taskListId}) => {\r\n        /*\r\n        console.log(\"Called\");\r\n        console.log(`${taskName} and ${taskListId}`);\r\n        */\r\n\r\n        switch (taskListId) {\r\n            case \"1\": {\r\n                setNotStarted(prevState => prevState.filter(item => item !== taskName));\r\n                break;\r\n            }\r\n            case \"2\": {\r\n                setInProgress(prevState => prevState.filter(item => item !== taskName));\r\n                break;\r\n            }\r\n            case \"3\": {\r\n                setCompleted(prevState => prevState.filter(item => item !== taskName));\r\n                break;\r\n            }   \r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const displayList = (list = [], listId = '1') => {\r\n        return list.map(task => (\r\n                <li \r\n                    draggable \r\n                    className={listId == '1' ? classes.ListItem1 : listId == '2' ? classes.ListItem2 : classes.ListItem3} \r\n                    key={Math.random().toFixed(2) * Date.now()} \r\n                    onDragStart={(e) => onDragStartHandler(e, task)}\r\n                    data-listnumber={listId}\r\n                    data-testid={listId == '1' ? 'notCompletedListItem' : listId == 'inProgressListItem' ? classes.ListItem2 : \"completedListItem\"}\r\n                >\r\n                    {task}\r\n                </li>\r\n            )\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <h1>To Do List Application</h1>\r\n            <button data-testid=\"add\" onClick={() => setOpen(true)} className={classes.NewTask}>New Task +</button>\r\n\r\n            <div className={classes.Container}>\r\n                <div data-testid=\"notstarted\" name=\"notstarted\"  onDragOver={onDragOverHandler} onDrop={onDropHandler} className={classes.NotStarted}>\r\n                   <h3>Not Started</h3>\r\n                   {displayList(notStarted, \"1\")}\r\n                </div>\r\n                <div data-testid=\"inprogress\" name=\"inprogress\" onDragOver={onDragOverHandler} onDrop={onDropHandler} className={classes.InProgress}>\r\n                    <h3>In Progress</h3>\r\n                    {displayList(inProgress, \"2\")}\r\n                </div>\r\n                <div data-testid=\"completed\" name=\"completed\" onDragOver={onDragOverHandler} onDrop={onDropHandler} className={classes.Completed}>\r\n                    <h3>Completed</h3>\r\n                    {displayList(completed, \"3\")}\r\n                </div>\r\n            </div>\r\n            <Modal open={open} addTask={addTask} setModal={setOpen} />\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TaskList;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Route\\Route.jsx",["219"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Route = ({ path, children }) => {\r\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    const onLocationchange = () => {\r\n      // alert(\"location change\");\r\n      setCurrentPath(window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener(\"popstate\", onLocationchange);\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", onLocationchange);\r\n    };\r\n  }, []);\r\n\r\n  return currentPath === path ? children : null;\r\n};\r\n\r\nexport default Route;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Modal\\Modal.jsx",["220"],"import React, { useState } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst Modal = ( { open, setModal, ...rest } ) => {\r\n\r\n    if(! open )\r\n        return null;\r\n\r\n\r\n    return ( \r\n        ReactDOM.createPortal(\r\n            <>\r\n                <div data-testid=\"overlay\" className={classes.Overlay} onClick={() => setModal(false)} ></div>\r\n                <div data-testid=\"modalContainer\" className={classes.Modalcontainer}>\r\n                    <h4>Add an Item</h4>\r\n                    <form data-testid=\"modalForm\" action=\"/\" onSubmit={rest.addTask}>\r\n                        <input data-testid=\"modalInput\" autoFocus className={classes.Input} type=\"text\" placeholder=\"Type a task\"/>\r\n                        <button data-testid=\"modalAdd\" type=\"submit\" className={classes.AddButton} >Add</button>\r\n                    </form>\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        )\r\n     );\r\n}\r\n \r\nexport default Modal;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Link\\Link.jsx",[],["221","222"],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Blog.jsx",["223"],"import React, { useState } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Article from './Articles/Article/Article';\r\nimport Articles from './Articles/Articles';\r\nimport Editor from './Editor/Editor';\r\nimport Header from './Header/Header';\r\nimport Preview from './Preview/Preview';\r\n\r\n\r\nconst Blog = () => {\r\n\r\n    const [preview, showPreview] = useState(false);\r\n\r\n    const [blogText, setBlogText] = useState('Type Something');\r\n    const [blogList, setBlogList] = useState([]);\r\n\r\n    const addToBlogList = (article) => {\r\n        article.id = Math.floor(Math.random() * 100 * Date.now());\r\n        article.createdAt = new Date().toLocaleDateString();\r\n        setBlogList([...blogList, article]);\r\n        localStorage.setItem('blogList', blogList);\r\n    }\r\n\r\n    const deleteFromBlogList = (articleId) => {\r\n        const newbloglist = blogList.filter(article => article.id !== articleId);\r\n        setBlogList(newbloglist);\r\n        localStorage.setItem('blogList', blogList);\r\n    }\r\n\r\n    const getArticleDetails = (articleID = '') => {\r\n        // console.log(articleID);\r\n        // console.log(blogList);\r\n        const filteredArticle = blogList.filter(article => article.id == articleID);\r\n        // console.log(\"Fil \", filteredArticle);\r\n        if(filteredArticle.length === 1 )\r\n            return filteredArticle[0];\r\n        return {};\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Articles articles={blogList} deleteByID={deleteFromBlogList} />\r\n                </Route>\r\n                <Route path=\"/compose\">\r\n                    <>\r\n                        {preview && <Preview setBlogText={setBlogText } value={blogText} />}\r\n                        <Editor preview={preview} value={blogText} showPreview={showPreview} addArticle={addToBlogList} setBlogText={setBlogText }  />\r\n                    </>\r\n                </Route>\r\n                <Route path=\"/posts/:articleId\">\r\n                    <Article searchByID={getArticleDetails} />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Blog;","C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Header\\Header.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Preview\\Preview.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Editor\\Editor.jsx",["224"],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Articles\\Articles.jsx",[],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Blog\\Articles\\Article\\Article.jsx",["225"],"C:\\Users\\Gokul\\Downloads\\Examly\\Projects\\React\\Work Projects\\reactapp\\src\\components\\Navigation\\Navigation.jsx",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":12},{"ruleId":"230","severity":1,"message":"234","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":20},{"ruleId":"230","severity":1,"message":"235","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":19},{"ruleId":"230","severity":1,"message":"236","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":19,"column":27,"nodeType":"239","messageId":"240","endLine":19,"endColumn":29},{"ruleId":"230","severity":1,"message":"241","line":3,"column":33,"nodeType":"232","messageId":"233","endLine":3,"endColumn":51},{"ruleId":"242","severity":1,"message":"243","line":33,"column":25,"nodeType":"244","endLine":33,"endColumn":86},{"ruleId":"242","severity":1,"message":"243","line":46,"column":25,"nodeType":"244","endLine":46,"endColumn":86},{"ruleId":"242","severity":1,"message":"243","line":59,"column":25,"nodeType":"244","endLine":59,"endColumn":86},{"ruleId":"230","severity":1,"message":"245","line":3,"column":9,"nodeType":"232","messageId":"233","endLine":3,"endColumn":24},{"ruleId":"226","replacedBy":"246"},{"ruleId":"228","replacedBy":"247"},{"ruleId":"230","severity":1,"message":"234","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},{"ruleId":"230","severity":1,"message":"248","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":21},{"ruleId":"230","severity":1,"message":"235","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":19},{"ruleId":"230","severity":1,"message":"236","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":22},{"ruleId":"230","severity":1,"message":"249","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":14},{"ruleId":"230","severity":1,"message":"250","line":7,"column":8,"nodeType":"232","messageId":"233","endLine":7,"endColumn":20},{"ruleId":"230","severity":1,"message":"251","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":17},{"ruleId":"230","severity":1,"message":"252","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":22},{"ruleId":"230","severity":1,"message":"253","line":10,"column":8,"nodeType":"232","messageId":"233","endLine":10,"endColumn":16},{"ruleId":"230","severity":1,"message":"254","line":13,"column":8,"nodeType":"232","messageId":"233","endLine":13,"endColumn":18},{"ruleId":"230","severity":1,"message":"241","line":3,"column":33,"nodeType":"232","messageId":"233","endLine":3,"endColumn":51},{"ruleId":"242","severity":1,"message":"243","line":33,"column":25,"nodeType":"244","endLine":33,"endColumn":86},{"ruleId":"242","severity":1,"message":"243","line":46,"column":25,"nodeType":"244","endLine":46,"endColumn":86},{"ruleId":"242","severity":1,"message":"243","line":59,"column":25,"nodeType":"244","endLine":59,"endColumn":86},{"ruleId":"230","severity":1,"message":"245","line":3,"column":9,"nodeType":"232","messageId":"233","endLine":3,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":16,"column":34,"nodeType":"244","endLine":16,"endColumn":159},{"ruleId":"230","severity":1,"message":"257","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":11,"column":33,"nodeType":"239","messageId":"240","endLine":11,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":48,"column":29,"nodeType":"239","messageId":"240","endLine":48,"endColumn":31},{"ruleId":"258","severity":1,"message":"259","line":59,"column":23,"nodeType":"260","messageId":"261","endLine":59,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":84,"column":11,"nodeType":"264","messageId":"265","endLine":106,"endColumn":12},{"ruleId":"237","severity":1,"message":"238","line":117,"column":20,"nodeType":"239","messageId":"240","endLine":117,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":138,"column":9,"nodeType":"264","messageId":"265","endLine":148,"endColumn":10},{"ruleId":"237","severity":1,"message":"266","line":155,"column":31,"nodeType":"239","messageId":"240","endLine":155,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":42,"column":28,"nodeType":"239","messageId":"240","endLine":42,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":114,"column":39,"nodeType":"239","messageId":"240","endLine":114,"endColumn":41},{"ruleId":"237","severity":1,"message":"238","line":114,"column":75,"nodeType":"239","messageId":"240","endLine":114,"endColumn":77},{"ruleId":"237","severity":1,"message":"238","line":118,"column":41,"nodeType":"239","messageId":"240","endLine":118,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":118,"column":82,"nodeType":"239","messageId":"240","endLine":118,"endColumn":84},{"ruleId":"230","severity":1,"message":"267","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":13},{"ruleId":"230","severity":1,"message":"268","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"226","replacedBy":"269"},{"ruleId":"228","replacedBy":"270"},{"ruleId":"237","severity":1,"message":"238","line":33,"column":71,"nodeType":"239","messageId":"240","endLine":33,"endColumn":73},{"ruleId":"237","severity":1,"message":"238","line":47,"column":74,"nodeType":"239","messageId":"240","endLine":47,"endColumn":76},{"ruleId":"271","severity":1,"message":"272","line":20,"column":19,"nodeType":"273","endLine":20,"endColumn":40},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'UrlValidator' is defined but never used.","'ImageLoader' is defined but never used.","'AreaCalculator' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'generateRandomList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'convertedNumber' is assigned a value but never used.",["274"],["275"],"'FilterEvenOdd' is defined but never used.","'Search' is defined but never used.","'ColorChanger' is defined but never used.","'Stopwatch' is defined but never used.","'InputContainer' is defined but never used.","'TaskList' is defined but never used.","'Navigation' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useEffect' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","'React' is defined but never used.","'useState' is defined but never used.",["274"],["275"],"react-hooks/exhaustive-deps","Assignments to the 'article' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]